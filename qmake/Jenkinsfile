stage('Load Shared Library'){
try {
   library identifier: "devops-pipelines_branch@${env.PIPELINE_VERSION}",
      retriever: modernSCM(
            [
               $class: 'GitSCMSource',
               remote: 'https://lnsvr0329.gcsd.harris.com:8443/bitbucket/scm/devp/devops-pipelines.git',
            ]
      )
} catch(Exception e) {
   echo "WARNING - tried to load shared pipeline library version: ${env.PIPELINE_VERSION}, but branch/tag does not exist in library repo. Using master instead."
   library identifier: "devops-pipelines@master",
      retriever: modernSCM(
            [
               $class: 'GitSCMSource', 
               remote: 'https://lnsvr0329.gcsd.harris.com:8443/bitbucket/scm/devp/devops-pipelines.git',
            ]
      )
   }
} 

runPipeline(
   //machine that the jenkins pipeline will run on. required
   JENKINS_SLAVE: 'JENKINS_SLAVE',
   
   //parameter that controls whether notifications will be sent when the job is completed. Default is 'false'. If 'true', default processing is to 
   //send an email to the user that submitted the job, and to any email addresses (comma separated list) in the EMAIL_RECIPIENTS parameter on the job.
   SEND_NOTIFICATION: 'true',

   //root of source code. optional. recommended value is '.'
   PROJECT_ROOT: '.',
   //location of the source code. optional. recommended value is 'src' 
   SOURCE_CODE_DIRECTORY: 'src',
   //location of the unit test code. optional. recommended value is 'test'   
   UNIT_TEST_DIRECTORY: 'DOCPF_Prebuild/test/qttest',

   //if you want the prebuild tool to run. optional. recommended value is 'true'. Must be String value
   RUN_PREBUILD: 'true',

   //prebuild tool for project. required. 'cmake' for c/c++ on Unix, 'nuget' for C# on Windows
   PREBUILD_TOOL: 'qmake',

   //directory for cmake generated files. optional. default value is '.'
   PREBUILD_DIRECTORY: 'DOCPF_Prebuild',

   //path of the cmakelists.txt file. required. recommended value is ''. Must be String value
   QMAKE_FILE: '../QMake.pro',
  
   //if you want the build tool to run. optional. recommended value is 'true'. Must be String value.
   RUN_BUILD: 'true',
   //build tool for the project. required. 'setuptools' for python, 'maven' for java, 'make' for c++, 'msbuild' for c#
   BUILD_TOOL: 'make',
  
   //if you want to run unit tests. optional. recommended value is 'true'. Must be String value.
   RUN_UNIT_TEST: 'true',
   //unit testing framework options: VSTest, GoogleTest, JUnit, pytest, or unittest. required. 
   UNIT_TEST_CHOICE: 'QtTest',

   //if you want to run static code analysis. optional. recommended value is 'true'. Must be String value.
   RUN_STATIC_CODE_ANALYSIS: 'true',
   //tool used to perform static code analysis. options: SonarQube, Klocwork, CPPCheck, Pylint, spotbugs. required.
   STATIC_CODE_ANALYSIS_CHOICE: 'CPPCheck',

   //If you want to run static application security testing. Optional. Recommended value is 'true'. Must be String value.
   RUN_STATIC_APPLICATION_SECURITY: 'false',
   //Tool used to perform static application security testing. Options: Fortify. Required.
   STATIC_APPLICATION_SECURITY_CHOICE: 'Fortify',

   //if you want to run code coverage. optional. recommended value is 'true'. Must be String value.
   RUN_CODE_COVERAGE: 'true',
   //options: OpenCover, GCov, pytest-cov, coverage. required
   CODE_COVERAGE_CHOICE: 'GCov',

   //if you want to run artifact management. optional. recommended value is 'true'. Must be String value.
   RUN_ARTIFACT_MANAGEMENT: 'true',
   //artifact repository type options: Generic, NuGet, Maven, PyPi. required
   ARTIFACT_MANAGEMENT_CHOICE: 'generic',
   //location of the artifact to store in artifact management. required      
   ARTIFACT_LOCATION: 'DOCPF_Prebuild/src/exampleapp',
   
   //name of the artifacts to store in artifact management. supports wildcards. optional. recommended value is '*'
   ARTIFACT_FILENAME_PATTERN: '.*exampleapp.*',
   //if you want to use a regex filename pattern. default value is false.
   ARTIFACT_REGEX_PATTERN_FLAG: 'true',
   //location of the artifact management tool. required if ARTIFACT_REGEX_PATTERN_FLAG is 'true'
   ARTIFACT_MANAGEMENT_TOOL_URL: 'https://lnsvr0310.gcsd.harris.com:8443/artifactory',
   //location of the artifact management repo. required
   ARTIFACT_URL: 'https://lnsvr0310.gcsd.harris.com:8443/artifactory/devops_factory_generic',
   //explicit artifact destination path to append to ARTIFACT_URL. default value is ''
   ARTIFACT_DESTINATION_PATH: "QMake/ExampleApp/${BUILD_NUMBER}",
   //immediate directory that the artifact will be stored in on the artifact management tool. used for versioning the artifact. optional. recommended value is '1.0.0'
   VERSION_NUMBER: '1.0.0',
   //directory location for program specific pre/post processing. optional. recommended value is ''. 
   PROGRAM_SPECIFIC_SCRIPT: 'vars/prePostProcessing.groovy',
   //name of the makefile. optional. recommended value is ''.
   MAKEFILE_NAME: 'QMake_Makefile',
   //the makefile target. optional. default value is 'all'.
   MAKEFILE_TARGET: 'all',

   //if you want to deploy artifacts. default value is 'true'
   RUN_DEPLOY_ARTIFACTS: 'true',
   //use 'separate' if Ansible repo is separate from source code repo.  Use 'source' if Ansible playbooks are included in source code repo
   ANSIBLE_REPO_TYPE: 'separate',
   //if Ansible playbooks are included in source code repo, use the directory name.  Required if ANSIBLE_REPO_TYPE = 'source'
   ANSIBLE_DIRECTORY: '',
   //ansible git repository url. Required if ANSIBLE_REPO_TYPE is set to 'separate'.  Default value set to factory git repository URL.
   ANSIBLE_URL: 'https://lnsvr0329.gcsd.harris.com:8443/bitbucket/scm/devp/ansible.git',
   //ansible git repository branch.  Required if DEPLOY_ARTIFACTS is set to 'true'.  Default value set to 'master'
   ANSIBLE_BRANCH: 'master',
   //name of the Ansible playbook to test artifacts of this particular build type.  Required if using program provided playbooks.  Do not include the .yml file extension.
   ANSIBLE_PLAYBOOK_NAME: 'generic',
   // destination folder where artifact will be deployed. required
   ARTIFACT_DEST_FOLDER: '.',
  
   //the number of builds to keep for the job on Jenkins. optional. recommended value is '5'
   NUMBER_BUILDS_TO_KEEP: '6',
   //the number of artifacts to keep for the job on Jenkins. optional. recommended value is '5'
   NUMBER_ARTIFACTS_TO_KEEP: '6',
   //the time to let the pipeline run before timing out. optional. recommended value is '9'
   TIMEOUT_TIME: 10,
   //the type of time to let the pipeline run before timing out. optional. recommended value is 'HOURS'
   TIMEOUT_UNITS: 'HOURS'
)