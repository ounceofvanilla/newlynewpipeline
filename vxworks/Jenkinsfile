try {
   library identifier: "devops-pipelines_branch@${env.PIPELINE_VERSION}",
      retriever: modernSCM(
         [
            $class: 'GitSCMSource',
            remote: 'https://lnsvr0329.gcsd.harris.com:8443/bitbucket/scm/devp/devops-pipelines.git',
         ]
      )
}
catch(Exception e) {
   echo "WARNING - tried to load shared pipeline library version: ${env.PIPELINE_VERSION}, but branch/tag does not exist in library repo. Using master instead."
   library identifier: "devops-pipelines@master",
      retriever: modernSCM(
         [
            $class: 'GitSCMSource', 
            remote: 'https://lnsvr0329.gcsd.harris.com:8443/bitbucket/scm/devp/devops-pipelines.git',
         ]
      )
}

runPipeline(
    WIND_HOME: "C:\\WindRiver39",
    //machine that the jenkins pipeline will run on. required
    JENKINS_AGENT: 'WINDOWS_10_LAB_AGENT',

    //parameter that controls whether notifications will be sent when the job is completed. Default is 'false'. If 'true', default processing is to 
    //send an email to the user that submitted the job, and to any email addresses (comma separated list) in the EMAIL_RECIPIENTS parameter on the job.
    SEND_NOTIFICATION: 'true',

    //root of source code. optional. recommended value is '.'
    PROJECT_ROOT: '.',

    //if you want the build tool to run. optional. recommended value is 'true'
    RUN_BUILD: 'true',
    //build tool for the project. required. 'setuptools' for python, 'maven' for java, 'make' for c++, 'msbuild' for c#
    BUILD_TOOL: 'VxWorks',

    //VxWorks specific parameters
    //VXWORKS_PACKAGE is the -p parameter for wrenv and defines the package used for the build
    VXWORKS_PACKAGE: 'vxworks-6.9',
    //VXWORKS_ADDITIONAL_PARMS provides the program the ability to pass arbitrary parameters to VxWorks for the build
    VXWORKS_ADDITIONAL_PARMS: '--no-print-directory BUILD_SPEC=SIMNTgnu DEBUG_MODE=1 TRACE=1',

    //if you want to run unit tests. optional. recommended value is 'true'
    RUN_UNIT_TEST: 'false',

    //if you want to run static code analysis. optional. recommended value is 'true'
    RUN_STATIC_CODE_ANALYSIS: 'false',

    //If you want to run static application security testing. Optional. Recommended value is 'true'. Must be String value.
    RUN_STATIC_APPLICATION_SECURITY: 'false',

    //if you want to run code coverage. optional. recommended value is 'true'
    RUN_CODE_COVERAGE: 'false',

    //if you want to run artifact management. optional. recommended value is 'true'
    RUN_ARTIFACT_MANAGEMENT: 'true',
    //artifact repository type options: Generic, NuGet, Maven, PyPi. required
    ARTIFACT_MANAGEMENT_CHOICE: 'Generic',
    //location of the artifact to store in artifact management. required
    ARTIFACT_LOCATION: 'HelloWorld\\Debug',
    //option to create checksum headers for artifacts
    ARTIFACT_GENERATE_CHECKSUM: 'true',

    //name of the artifacts to store in artifact management. supports wildcards. optional. recommended value is '*'. If using regex, the ARTIFACT_REGEX_PATTERN_FLAG must be set to true.
    ARTIFACT_FILENAME_PATTERN: '.*HelloWorld.out',
    //if you want to use a regex filename pattern. default value is false.
    ARTIFACT_REGEX_PATTERN_FLAG: 'true',
    //location of the artifact management tool. required
    ARTIFACT_URL: 'https://lnsvr0310.gcsd.harris.com:8443/artifactory/devops_factory_generic',
    //explicit artifact destination path to append to ARTIFACT_URL. default value is ''
    ARTIFACT_DESTINATION_PATH: "VxWorks/HelloWorld/${BUILD_NUMBER}",
    //immediate directory that the artifact will be stored in on the artifact management tool. used for versioning the artifact. optional. recommended value is '1.0.0'
    VERSION_NUMBER: '1.0.0',
    //if set to false, allows a program to append a build number to the version number. recommended value is 'false'
    FORMAL_VERSION: 'false',
    //directory location for program specific pre/post processing. optional. recommended value is ''.
    PROGRAM_SPECIFIC_SCRIPT: '',
    //name of the makefile. optional. recommended value is ''.
    MAKEFILE_NAME: '',
    //the makefile target. optional. default value is 'all'.
    MAKEFILE_TARGET: '',

    // if you want to run functional tests. optional
    RUN_FUNCTIONAL_TEST: 'false',

    //if you want to deploy artifacts. default value is 'true'
    RUN_DEPLOY_ARTIFACTS: 'true',
    ARTIFACT_DEST_FOLDER: '.',
    ARTIFACT_DEPLOYMENT_TOOL: 'generic',
    ARTIFACT_DEPLOYMENT_SEARCH_REGEX_FLAG: 'false',
    ARTIFACT_DEPLOYMENT_SEARCH_PATTERN: 'HelloWorld.out',

  	// The number of builds to keep for the job on Jenkins (optional). Will not limit the number of builds kept if blank.
    // Note: you may use both NUMBER_BUILDS_TO_KEEP and DAYS_BUILDS_TO_KEEP. If you would not like to use one, just leave it blank.
    NUMBER_BUILDS_TO_KEEP: '6',
    // The number of days' worth of builds to keep for the job on Jenkins (optional). Will not limit the number of days builds are kept if blank.
    DAYS_BUILDS_TO_KEEP: '',  
    //the number of artifacts to keep for the job on Jenkins. optional. recommended value is '5'
    NUMBER_ARTIFACTS_TO_KEEP: '6',
    //the time to let the pipeline run before timing out. optional. recommended value is '9'
    TIMEOUT_TIME: 10,
    //the type of time to let the pipeline run before timing out. optional. recommended value is 'HOURS'
    TIMEOUT_UNITS: 'HOURS'
)